{"uid":"95defdcb2eb0b889","name":"test_get_client_profile","fullName":"tests.test_client_profile#test_get_client_profile","historyId":"d42dd0437ebc065a7f1fb8fd9ea97ec1","time":{"start":1746611201067,"stop":1746611201067,"duration":0},"description":"\n    Test retrieving client profile information\n    ","descriptionHtml":"<pre><code>Test retrieving client profile information\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Login failed: {\"error\":{\"status\":404,\"name\":\"INVALID CREDENTIALS\",\"message\":\"Incorrect credentials\"}}\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"@pytest.fixture(scope=\"session\")\n    def client_login_response():\n        \"\"\"\n        Perform client login and return the full JSON response\n        \"\"\"\n        creds = load_credentials()\n    \n        url = f\"{BASE_URL}/api/v1/user/login\"\n        headers = {\n            \"accept\": \"application/json, text/plain, */*\",\n            \"accept-language\": \"en-US,en;q=0.9\",\n            \"content-type\": \"application/json\",\n            \"x-country-alpha-2\": \"KZ\",\n            \"x-language-alpha-2\": \"en\",\n            \"x-location\": \"Asia/Yerevan, AM\"\n        }\n    \n        payload = {\n            \"userType\": \"client\",\n            \"email\": creds[\"email\"],\n            \"password\": creds[\"password\"]\n        }\n    \n        response = requests.post(url, json=payload, headers=headers)\n>       assert response.status_code == 200, f\"Login failed: {response.text}\"\nE       AssertionError: Login failed: {\"error\":{\"status\":404,\"name\":\"INVALID CREDENTIALS\",\"message\":\"Incorrect credentials\"}}\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nconftest.py:59: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"client_login_response","time":{"start":1746611200060,"stop":1746611201038,"duration":978},"status":"failed","statusMessage":"AssertionError: Login failed: {\"error\":{\"status\":404,\"name\":\"INVALID CREDENTIALS\",\"message\":\"Incorrect credentials\"}}\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/api_demo_tests/api_demo_tests/conftest.py\", line 59, in client_login_response\n    assert response.status_code == 200, f\"Login failed: {response.text}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_client_profile"},{"name":"host","value":"fv-az798-685"},{"name":"thread","value":"3280-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_client_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"1aaf2b148a9db5f0","status":"passed","time":{"start":1745852277849,"stop":1745852278167,"duration":318}},{"uid":"42476679714c1d85","status":"passed","time":{"start":1745851082513,"stop":1745851082860,"duration":347}},{"uid":"e92c3a2d96ae665f","status":"passed","time":{"start":1745850597729,"stop":1745850598068,"duration":339}},{"uid":"2aecdbd5a77b1374","status":"passed","time":{"start":1745850197190,"stop":1745850197726,"duration":536}},{"uid":"e1c8a558f95cd1b1","status":"passed","time":{"start":1745835695258,"stop":1745835695803,"duration":545}},{"uid":"bf0824d04a2ed770","status":"passed","time":{"start":1745507865272,"stop":1745507865604,"duration":332}},{"uid":"e6035d9af8b2e147","status":"passed","time":{"start":1745507535349,"stop":1745507535856,"duration":507}},{"uid":"94866335d32e5d9f","status":"passed","time":{"start":1745507251011,"stop":1745507251385,"duration":374}},{"uid":"5c4b25e5eda9331","status":"passed","time":{"start":1745498830861,"stop":1745498831187,"duration":326}},{"uid":"dd763c4c98fec6c8","status":"passed","time":{"start":1745497219324,"stop":1745497219703,"duration":379}}]},"tags":[]},"source":"95defdcb2eb0b889.json","parameterValues":[]}